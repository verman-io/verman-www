name = "verman-schema-rs"
version = "0.0.1"
license = "(Apache-2.0 OR MIT)"
homepage = "https://verman.io"
repo = "https://github.com/verman-io"
authors = [ "Samuel Marks <@SamuelMarks>" ]

# ^ these are inferred from package.json,
# pyproject.toml, setup.py &etc. if not provided

#################################
# States / deploy configuration #
#################################
# valid states = {
#    "always", "graceful", "untouched",
#    "stop", "remove", "dry_run"
# }

# "always" semantics:
# - install or reinstall
# - start or restart service

# "graceful" semantics:
# - reload service if stopped otherwise start

# "untouched" / null (default) semantics:
# - ping service, if not started/installed:
#   - ping next service in array until end
#   - error if no services are pingable
#   - otherwise set env var for pingable service

# "stop" semantics:
# - uninstall service

# "remove" semantics:
# - stop service if running
# - place config files in "deleted_${name}${version}/"
# - delete all other files (if not simple archive invoke package-manager)

[stack.state.database]
kind = "sql"
install = "always"
start = "always"

[stack.state.application_server]
install = "always"
start = "always"

[stack.state.web_server_or_proxy]
install = "always"
start = "always"

#######################
# Stack configuration #
#######################

[[stack.database]]
kind = "sql"

[[stack.application_server]]
kind = "python"
# other than `kind`; rest optional:
versions = [ "~2.7", "~3.6", "~3.13" ]
server_priority = [ "Waitress", "mod_wsgi", "uvicorn" ]

[[stack.application_server]]
kind = "ruby"

[[stack.web_server_or_proxy]]
name = "my_name.verman.io"
# other than `name`; rest optional:
protocol = "https"
certificate_vendor = "LetsEncrypt"

[[component]]
src = "./python_api_folder/"
uri = "http://localhost:${env.PYTHON_API_PORT}"
# inferred from setup.py | setup.cfg | pyproject.toml
# ...or you can explicitly specify these two:
kind = "python"
version = ">3.8"

[[component]]
src = "./ruby_api_folder/"
uri = '${if(WIN32) { "\\.\pipe\PipeName" } else { "unix:///var/run/my-socket.sock" }}'
# inferred from Gemfile | version.rb | VERSION | .gemspec
# ...or you can explicitly specify these two:
kind = "ruby"
version = ">3.1.2, <3.2"

[[component]]
kind = "web_server_or_proxy"
uri = "my_app.verman.io"

[component.mounts."/api/py"]
kind = "python"
location = '${stack.components[kind=="python"].uri}'

[component.mounts."/api/ruby"]
kind = "ruby"
location = '${stack.components[kind=="ruby"].uri}'

[component.mounts."/"]
kind = "static"
location = "${env.WWWROOT}"
